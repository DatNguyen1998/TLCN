// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TLCN.Models;

namespace TLCN.Models.Migrations
{
    [DbContext(typeof(TLCNDatabaseContext))]
    partial class TLCNDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TLCN.Models.AuthUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(255);

                    b.Property<string>("AppService")
                        .HasMaxLength(255);

                    b.Property<Guid?>("AvatarId");

                    b.Property<DateTimeOffset>("BirthDate");

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<Guid?>("DistrictId");

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.Property<string>("Fullname")
                        .HasMaxLength(255);

                    b.Property<Guid?>("GenderId");

                    b.Property<bool>("IsActivated");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255);

                    b.Property<string>("Password")
                        .HasMaxLength(255);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255);

                    b.Property<Guid?>("ProvinceId");

                    b.Property<int>("Role");

                    b.Property<string>("Username")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("GenderId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("AuthUsers");
                });

            modelBuilder.Entity("TLCN.Models.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppService")
                        .HasMaxLength(255);

                    b.Property<Guid>("AuthUserId");

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("IsActivated");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255);

                    b.Property<double>("Total");

                    b.HasKey("Id");

                    b.HasIndex("AuthUserId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("TLCN.Models.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(255);

                    b.Property<string>("AppService")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<Guid?>("DistrictId");

                    b.Property<bool>("IsActivated");

                    b.Property<bool>("IsPointOfSale");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<Guid?>("ParentId");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10);

                    b.Property<Guid?>("ProvinceId");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("TLCN.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppService")
                        .HasMaxLength(255);

                    b.Property<Guid>("AuthUserId");

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("IsActivated");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("AuthUserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("TLCN.Models.CartDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<string>("AppService")
                        .HasMaxLength(255);

                    b.Property<Guid>("CartId");

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("IsActivated");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255);

                    b.Property<Guid>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartDetails");
                });

            modelBuilder.Entity("TLCN.Models.DetailBill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<string>("AppService")
                        .HasMaxLength(255);

                    b.Property<Guid>("BillId");

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("IsActivated");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255);

                    b.Property<double>("PriceTotal");

                    b.Property<Guid>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductId");

                    b.ToTable("DetailBills");
                });

            modelBuilder.Entity("TLCN.Models.MetadataType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppService")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("IsActivated");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("MetadataTypes");
                });

            modelBuilder.Entity("TLCN.Models.MetadataValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppService")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<bool>("IsActivated");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<Guid?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("MetadataValues");
                });

            modelBuilder.Entity("TLCN.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppService")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<bool>("IsActivated");

                    b.Property<bool>("IsSell");

                    b.Property<Guid?>("Logo");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<double>("Price");

                    b.Property<Guid?>("ProducerId");

                    b.HasKey("Id");

                    b.HasIndex("ProducerId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TLCN.Models.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppService")
                        .HasMaxLength(255);

                    b.Property<Guid?>("BillId");

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<string>("Description");

                    b.Property<int>("DisCount");

                    b.Property<bool>("IsActivated");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("TLCN.Models.ReviewProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppService")
                        .HasMaxLength(255);

                    b.Property<Guid>("AuthUserId");

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<string>("Description");

                    b.Property<bool>("IsActivated");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255);

                    b.Property<Guid>("ProductId");

                    b.Property<int>("Rating");

                    b.HasKey("Id");

                    b.HasIndex("AuthUserId");

                    b.HasIndex("ProductId");

                    b.ToTable("ReviewProducts");
                });

            modelBuilder.Entity("TLCN.Models.AuthUser", b =>
                {
                    b.HasOne("TLCN.Models.MetadataValue", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("TLCN.Models.MetadataValue", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("TLCN.Models.MetadataValue", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId");
                });

            modelBuilder.Entity("TLCN.Models.Bill", b =>
                {
                    b.HasOne("TLCN.Models.AuthUser", "AuthUser")
                        .WithMany("Bills")
                        .HasForeignKey("AuthUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TLCN.Models.Branch", b =>
                {
                    b.HasOne("TLCN.Models.MetadataValue", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("TLCN.Models.MetadataValue", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId");
                });

            modelBuilder.Entity("TLCN.Models.Cart", b =>
                {
                    b.HasOne("TLCN.Models.AuthUser", "AuthUser")
                        .WithMany()
                        .HasForeignKey("AuthUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TLCN.Models.CartDetail", b =>
                {
                    b.HasOne("TLCN.Models.Cart", "Cart")
                        .WithMany("CartDetails")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TLCN.Models.Product", "Product")
                        .WithMany("CartDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TLCN.Models.DetailBill", b =>
                {
                    b.HasOne("TLCN.Models.Bill", "Bill")
                        .WithMany("DetailBills")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TLCN.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TLCN.Models.MetadataValue", b =>
                {
                    b.HasOne("TLCN.Models.MetadataType", "Type")
                        .WithMany("MetadataValues")
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("TLCN.Models.Product", b =>
                {
                    b.HasOne("TLCN.Models.MetadataValue", "Producer")
                        .WithMany()
                        .HasForeignKey("ProducerId");
                });

            modelBuilder.Entity("TLCN.Models.Promotion", b =>
                {
                    b.HasOne("TLCN.Models.Bill", "Bill")
                        .WithMany("Promotions")
                        .HasForeignKey("BillId");
                });

            modelBuilder.Entity("TLCN.Models.ReviewProduct", b =>
                {
                    b.HasOne("TLCN.Models.AuthUser", "AuthUser")
                        .WithMany("ReviewProducts")
                        .HasForeignKey("AuthUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TLCN.Models.Product", "Product")
                        .WithMany("ReviewProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
